@model IEnumerable<web_TCC.Models.V_RelRegistroPontos>

@{
    ViewBag.Title = "Relatórios - Registros por Pontos";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";

    var myArrayDados = ViewBag.RelPontos;

    var EntradaDataView = "";
    var SaidaDataView = "";
    String PontoDataView = "";
    int i = 0;

    if (ViewBag.RelPontos != null)
    {
        foreach (var item in myArrayDados)
        {
            if (i == 0)
            {
                EntradaDataView += myArrayDados[i].RelatorioEntradaQuantidade;
                SaidaDataView += myArrayDados[i].RelatorioSaidaQuantidade;

                PontoDataView += "\"" + myArrayDados[i].PontoCodigo + "\"";
                i++;
            }
            else
            {
                EntradaDataView += "," + myArrayDados[i].RelatorioEntradaQuantidade;
                SaidaDataView += "," + myArrayDados[i].RelatorioSaidaQuantidade;
                PontoDataView += ",\"" + myArrayDados[i].PontoCodigo + "\"";
                i++;
            }
        }
    }
    
}

@ViewBag.Error

<big>
    <p class="text-info">
        Este relatório informa a quantidade total de embarque e deseembarque de determinada linha em cada ponto de ônibus, 
        indicando o veículo, o ponto e a quantidade de entrada e saída.
    </p>
</big>

<p class="muted">
    <ul>
        <li><big><span class="label label-default">Instruções</span></big><br /></li>
        <li>
            Informe o período a ser pesquisado, selecione a linha desejada e clique no botão
            <strong>Buscar</strong>.
            <br />
        </li>
        <li>
            Para visualizar o gráfico da pesquisa, clique no botão
            <strong>Gerar Gráfico</strong>.
        </li>
        <li>
            Caso deseje exportar o gráfico para excel, clique no botão <strong>Excel</strong>
        </li>
        <li>
            Caso deseje imprimir o gráfico, clique no botão <strong>Imprimir</strong>
        </li>
        <li>
            Para filtrar os resultados, insira o texto no campo <strong>Filtrar Resultado</strong>
        </li>
    </ul>
</p>
<hr />



@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <div class="control-group">
            <div class="controls">
                <div class="col-md-2 xdisplay_inputx form-group">
                    <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                    @Html.TextBox("txtGetDataInicio", "", new { @class = "form-control has-feedback-left", placeholder = "Data inicial" })
                </div>
                <div class="col-md-2 xdisplay_inputx form-group">
                    <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                    @Html.TextBox("txtGetDataFim", "", new { @class = "form-control has-feedback-left", placeholder = "Data final" })
                </div>
                @Html.DropDownList("ID_linha", null, "Linha", new { @class = "dropdown-toggle btn btn-default" })
            </div>
        </div>
    </fieldset>
    <br />
    <fieldset>
        <div class="control-group">
            <div class="controls">
                <div class="col-md-1 xdisplay_inputx form-group">
                    <input type="submit" value="Buscar" class="btn btn-primary" />
                </div>
                <button type="button" class="btn btn-default" data-toggle="modal" data-target=".bs-example-modal-lg">Gerar Gráfico</button>
            </div>
        </div>
    </fieldset>
}


@if (Model != null)
{
    if (Model.Any())
    {
        <table id="datatable-buttons" class="table table-striped table-bordered" cellspacing="0">
            <thead>
                <tr>
                    <th>
                        Linha
                    </th>
                    <th>
                        Veículo
                    </th>
                    <th>
                        Ponto
                    </th>
                    <th>
                        Entradas
                    </th>
                    <th>
                        Saídas
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.LinhaNumero)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RelatorioNumeroVeiculo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PontoCodigo) - @Html.DisplayFor(modelItem => item.PontoDescricao)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RelatorioEntradaQuantidade)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RelatorioSaidaQuantidade)
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    
        // Gráficos
        <div class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">
                            <span aria-hidden="true">×</span>
                        </button>
                        <h4 class="modal-title" id="myModalLabel">Gráfico Relatório Pontos</h4>
                    </div>
                    <div class="modal-body">
                        <div class="" id="container" style="width: 64%; height: 450px"></div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Fechar</button>
                    </div>
                </div>
            </div>
        </div>

    }
}
<script type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/highcharts.js"></script>
@*<script src="~/Scripts/exporting.js"></script>*@


<script type="text/javascript">
    var chart2;
    $(function () {
        chart2 = new Highcharts.Chart({
            chart: {
                renderTo: 'container',
                type: 'column'
            },
            title: {
                text: 'Gráfico de Entrada e Saída por ponto'
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                categories:
                    [
                        @Html.Raw(@PontoDataView)
                ],
                crosshair: true,
                title: {
                    text: 'Pontos'
                }
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Pessoas'
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                    '<td style="padding:0"><b>{point.y}</b></td></tr>',
                footerFormat: '</table>',
                shared: true,
                useHTML: true
            },

            exporting: {
                enabled: false
            },

            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            series: [{
                name: 'Entrada',
                data: [@EntradaDataView]
            }, {
                name: 'Saída',
                data: [@SaidaDataView]
            }]
        });
    });
</script>