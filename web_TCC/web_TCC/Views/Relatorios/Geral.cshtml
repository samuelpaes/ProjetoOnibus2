@model IEnumerable<web_TCC.Models.V_RegistrosLinhasPontos>

@ViewBag.Error

@{
    ViewBag.Title = "Relatórios - Informações Gerais";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";

    //var myArrayDados = ViewBag.RelTotal;

    //var Data = "";
    //var DadosDataView = "";
    //int i = 0;

    //if (ViewBag.RelTotal != null)
    //{
    //    Data = myArrayDados[0].Mes + "/" + myArrayDados[0].Ano;
    //    foreach (var item in myArrayDados)
    //    {
    //        DadosDataView += "[" + myArrayDados[i].Dia + ", " + myArrayDados[i].RegistroTotalPessoas + "],";
    //        i++;
    //    }
    //}
}


@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>

        <div class="control-group">

            <div class="controls">
                <div class="col-md-2 xdisplay_inputx form-group">
                    <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                    @Html.TextBox("txtGetDataInicio", "", new { @class = "form-control has-feedback-left", placeholder = "Data inicial" })
                </div>
                <div class="col-md-2 xdisplay_inputx form-group">
                    <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                    @Html.TextBox("txtGetDataFim", "", new { @class = "form-control has-feedback-left", placeholder = "Data final" })
                </div>
                @Html.DropDownList("ID_linha", null, "Linha", new { @class = "dropdown-toggle btn btn-default" })
            </div>
        </div>

    </fieldset>
    <br />
    <fieldset>
        <div class="control-group">
            <div class="controls">
                <div class="col-md-1 xdisplay_inputx form-group">
                    <input type="submit" value="Filtrar" class="btn btn-primary" />
                </div>
                @*<button type="button" class="btn btn-default" data-toggle="modal" data-target=".bs-example-modal-lg">Gerar Gráfico</button>*@
                <button type="button" class="btn btn-default" data-toggle="modal" data-target=".bs-example-modal-lg">Gerar Gráfico dos resultados</button>
            </div>
        </div>
    </fieldset>
}


@if (Model != null)
{
    if (Model.Any())
    {
        @*<div class="x_content">*@
        @*<p class="text-muted font-13 m-b-30">
                The Buttons extension for DataTables provides a common set of options, API methods and styling to display buttons on a page that will interact with a DataTable. The core library provides the based framework upon which plug-ins can built.
            </p>*@
        <table class="table">
            @*<table id="datatable-buttons" class="table table-striped table-bordered">*@
            @*<thead>*@
            <tr>
                <th>Linha</th>
                <th>Veículo</th>
                <th>Tipo</th>
                <th>Data</th>
                <th>Hora</th>
                <th>Passageiros</th>
                <th>Ponto de ônibus</th>
            </tr>
            @*</thead>*@

            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Registros.Linhas.Numero)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Registros.NumeroVeiculo)
                        </td>
                        <td>
                            @if (item.Registros.Entrada == true)
                            {
                                @Html.Label("Entrada");
                            }
                            else
                            {
                                @Html.Label("Saída");
                            }
                        </td>
                        <td>
                            @item.Registros.Data.ToShortDateString()
                            @*.ToString("dd/MM/yyyy")*@
                        </td>
                        @*<td style="background-color: #00ffe4">*@
                        <td>
                            @item.Registros.Data.ToShortTimeString()
                            @*@item.Relatorio.Hora.ToShortTimeString()
                                .ToString("HH:mm:ss")*@
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Registros.QuantidadePessoas)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Pontos.Código) -
                            @Html.DisplayFor(modelItem => item.Pontos.Descricao)
                        </td>
                    </tr>
<<<<<<< HEAD
                </thead>

                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Registros.Linhas.Numero)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Registros.NumeroVeiculo)
                            </td>
                            <td>
                                @if (item.Registros.Entrada == true)
                                {
                                    @Html.Label("Entrada");
                                }
                                else
                                {
                                    @Html.Label("Saída");
                                }
                            </td>
                            <td>
                                @item.Registros.Data.ToShortDateString()
                                @*.ToString("dd/MM/yyyy")*@
                            </td>
                            @*<td style="background-color: #00ffe4">*@
                            <td>
                                @item.Registros.Data.ToShortTimeString()
                                @*@item.Relatorio.Hora.ToShortTimeString()
                                    .ToString("HH:mm:ss")*@
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Registros.QuantidadePessoas)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Pontos.Código) -
                                @Html.DisplayFor(modelItem => item.Pontos.Descricao)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    
    //Gráfico
    <div class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        <span aria-hidden="true">×</span>
                    </button>
                    <h4 class="modal-title" id="myModalLabel">Gráfico Geral</h4>
                </div>
                <div class="modal-body">
                    @*<div class="" id="container" style="width: 64%; height: 450px"></div>*@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>
=======
                }
            </tbody>
        </table>
        @*</div>*@

        @*Gráfico*@
        <div class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">
                            <span aria-hidden="true">×</span>
                        </button>
                        <h4 class="modal-title" id="myModalLabel">Gráfico Relatório Geral</h4>
                    </div>
                    <div class="modal-body">
                        <div class="" id="container" style="width: 64%; height: 450px"></div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Fechar</button>
                    </div>
                </div>
            </div>
        </div>
<<<<<<< HEAD
>>>>>>> master
=======
>>>>>>> 59ac704b9c0be6156cd2358785c8813c4c01ec9c
>>>>>>> origin/vanessa
    }
}


<<<<<<< HEAD
@*<script type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/highcharts.js"></script>
<script src="~/Scripts/exporting.js"></script>

<script type="text/javascript">
=======

<script type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/highcharts.js"></script>
<script src="~/Scripts/exporting.js"></script>



<script type="text/javascript">
    var chart2;
    var categories = ['0', '1', '2', '3',
                '4', '5', '6', '7', '8',
                '9', '10', '11', '12', '13',
                '14', '15', '16', '17', '18',
                '19', '20', '21', '22', '23'];
    $(function () {
        // Age categories
        chart2 = new Highcharts.Chart({
            chart: {
                renderTo: 'container',
                type: 'bar'
            },
            title: {
                text: 'Quantidade média de embarque e desembarque de passageiros por horário'
            },
            subtitle: {
                //text: 'Source: <a href="http://populationpyramid.net/germany/2015/">Population Pyramids of the World from 1950 to 2100</a>'
            },
            xAxis: [{
                categories: categories,
                reversed: false,
                labels: {
                    step: 1
                }
            }, { // mirror axis on right side
                opposite: true,
                reversed: false,
                categories: categories,
                linkedTo: 0,
                labels: {
                    step: 1
                }
            }],
            yAxis: {
                title: {
                    text: 'Passageiros'
                },
                labels: {
                    formatter: function () {
                        return Math.abs(this.value);
                    }
                }
            },

            plotOptions: {
                series: {
                    stacking: 'normal'
                }
            },

            tooltip: {
                formatter: function () {
                    return '<b>' + this.series.name + /*', quantidade ' + this.point.category +*/ '</b><br/>' +
                        'Passageiros: ' + Highcharts.numberFormat(Math.abs(this.point.y), 0);
                }
            },

            series: [{
                name: 'Embarque',
                data: [-@ViewBag.emb0, -@ViewBag.emb1, -@ViewBag.emb2, -@ViewBag.emb3, -@ViewBag.emb4,
                       -@ViewBag.emb5, -@ViewBag.emb6, -@ViewBag.emb7, -@ViewBag.emb8, -@ViewBag.emb9,
                       -@ViewBag.emb10, -@ViewBag.emb11, -@ViewBag.emb12, -@ViewBag.emb13, -@ViewBag.emb14,
                       -@ViewBag.emb15, -@ViewBag.emb16, - @ViewBag.emb17, -@ViewBag.emb18, -@ViewBag.emb19,
                       -@ViewBag.emb20, -@ViewBag.emb21, -@ViewBag.emb22, -@ViewBag.emb23]
            }, {
                name: 'Desembarque',
                data: [@ViewBag.des0, @ViewBag.des1, @ViewBag.des2, @ViewBag.des3, @ViewBag.des4,
                       @ViewBag.des5, @ViewBag.des6, @ViewBag.des7, @ViewBag.des8, @ViewBag.des9,
                       @ViewBag.des10, @ViewBag.des11, @ViewBag.des12, @ViewBag.des13, @ViewBag.des14,
                       @ViewBag.des15, @ViewBag.des16, @ViewBag.des17, @ViewBag.des18, @ViewBag.des19,
                       @ViewBag.des20, @ViewBag.des21, @ViewBag.des22, @ViewBag.des23]
            }]
        });
    });
</script>



@*<script type="text/javascript">
<<<<<<< HEAD
>>>>>>> master
=======
>>>>>>> 59ac704b9c0be6156cd2358785c8813c4c01ec9c
>>>>>>> origin/vanessa
    var chart2;
    $(function () {
        chart2 = new Highcharts.Chart({
            chart: {
                renderTo: 'container',
<<<<<<< HEAD
                type: 'column'
            },
            title: {
                text: 'Grafico Total Passageiros por dia'
            },
            subtitle: {
                text: 'Mês: @Data'
=======
                type: 'spline'
            },
            title: {
                text: 'Wind speed during two days'
            },
            subtitle: {
                text: 'May 31 and and June 1, 2015 at two locations in Vik i Sogn, Norway'
<<<<<<< HEAD
>>>>>>> master
=======
>>>>>>> 59ac704b9c0be6156cd2358785c8813c4c01ec9c
>>>>>>> origin/vanessa
            },
            xAxis: {
                type: 'datetime',
                labels: {
<<<<<<< HEAD
                    rotation: -45,
                    style: {
                        fontSize: '13px',
                        fontFamily: 'Verdana, sans-serif'
                    }
                },
                title: {
            text: 'Dia'
=======
                    overflow: 'justify'
<<<<<<< HEAD
>>>>>>> master
=======
>>>>>>> 59ac704b9c0be6156cd2358785c8813c4c01ec9c
>>>>>>> origin/vanessa
                }
            },
            yAxis: {
                title: {
                    text: 'Wind speed (m/s)'
                },
                minorGridLineWidth: 0,
                gridLineWidth: 0,
                alternateGridColor: null,
                plotBands: [{ // Light air
                    from: 0.3,
                    to: 1.5,
                    color: 'rgba(68, 170, 213, 0.1)',
                    label: {
                        text: 'Light air',
                        style: {
                            color: '#606060'
                        }
                    }
                }, { // Light breeze
                    from: 1.5,
                    to: 3.3,
                    color: 'rgba(0, 0, 0, 0)',
                    label: {
                        text: 'Light breeze',
                        style: {
                            color: '#606060'
                        }
                    }
                }, { // Gentle breeze
                    from: 3.3,
                    to: 5.5,
                    color: 'rgba(68, 170, 213, 0.1)',
                    label: {
                        text: 'Gentle breeze',
                        style: {
                            color: '#606060'
                        }
                    }
                }, { // Moderate breeze
                    from: 5.5,
                    to: 8,
                    color: 'rgba(0, 0, 0, 0)',
                    label: {
                        text: 'Moderate breeze',
                        style: {
                            color: '#606060'
                        }
                    }
                }, { // Fresh breeze
                    from: 8,
                    to: 11,
                    color: 'rgba(68, 170, 213, 0.1)',
                    label: {
                        text: 'Fresh breeze',
                        style: {
                            color: '#606060'
                        }
                    }
                }, { // Strong breeze
                    from: 11,
                    to: 14,
                    color: 'rgba(0, 0, 0, 0)',
                    label: {
                        text: 'Strong breeze',
                        style: {
                            color: '#606060'
                        }
                    }
                }, { // High wind
                    from: 14,
                    to: 15,
                    color: 'rgba(68, 170, 213, 0.1)',
                    label: {
                        text: 'High wind',
                        style: {
                            color: '#606060'
                        }
                    }
                }]
            },
            tooltip: {
<<<<<<< HEAD
                pointFormat: '<b>{point.y} Passageiros</b>'
            },
            series: [{
                name: 'Passageiros',
                data: [
                   @DadosDataView
                ],
                dataLabels: {
                    enabled: true,
                    rotation: -90,
                    color: '#FFFFFF',
                    align: 'right',
                    format: '{point.y}', // one decimal
                    y: 10, // 10 pixels down from the top
                    style: {
                        fontSize: '13px',
                        fontFamily: 'Verdana, sans-serif'
=======
                valueSuffix: ' m/s'
            },
            plotOptions: {
                spline: {
                    lineWidth: 4,
                    states: {
                        hover: {
                            lineWidth: 5
                        }
                    },
                    marker: {
                        enabled: false
                    },
                    pointInterval: 3600000, // one hour
                    pointStart: Date.UTC(2015, 4, 31, 0, 0, 0)
                }
            },
            series: [{
                name: 'Hestavollane',
                data: [0.2, 0.8, 0.8, 0.8, 1, 1.3, 1.5, 2.9, 1.9, 2.6, 1.6, 3, 4, 3.6, 4.5, 4.2, 4.5, 4.5, 4, 3.1, 2.7, 4, 2.7, 2.3, 2.3, 4.1, 7.7, 7.1, 5.6, 6.1, 5.8, 8.6, 7.2, 9, 10.9, 11.5, 11.6, 11.1, 12, 12.3, 10.7, 9.4, 9.8, 9.6, 9.8, 9.5, 8.5, 7.4, 7.6]

            //}, {
            //    name: 'Vik',
            //    data: [0, 0, 0.6, 0.9, 0.8, 0.2, 0, 0, 0, 0.1, 0.6, 0.7, 0.8, 0.6, 0.2, 0, 0.1, 0.3, 0.3, 0, 0.1, 0, 0, 0, 0.2, 0.1, 0, 0.3, 0, 0.1, 0.2, 0.1, 0.3, 0.3, 0, 3.1, 3.1, 2.5, 1.5, 1.9, 2.1, 1, 2.3, 1.9, 1.2, 0.7, 1.3, 0.4, 0.3]
            }],
            navigation: {
                menuItemStyle: {
                    fontSize: '10px'
                }
            }
        });
    });</script>*@















@*<script type="text/javascript">
        var chart2;
        $(function () {
            chart2 = new Highcharts.Chart({
                chart: {
                    renderTo: 'container',
                    plotBackgroundColor: null,
                    plotBorderWidth: null,
                    plotShadow: false,
                    type: 'pie'
                },
                title: {
                    text: 'Browser market shares January, 2015 to May, 2015'
                },
                tooltip: {
                    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        cursor: 'pointer',
                        dataLabels: {
                            enabled: false
                        },
                        showInLegend: true
                    }
                },
                series: [{
                    name: 'Brands',
                    colorByPoint: true,
                    data: [{
                        name: '0h',
                        y: [@teste],
                    }, {
                        name: '1h',
                        y: [@teste2],

                    }]
                }]
            });
        });
        //});
    </script>*@


@*<script type="text/javascript">
        var chart2;
        $(function () {
            chart2 = new Highcharts.Chart({
                chart: {
                    renderTo: 'container',
                    type: 'spline'
                },
                title: {
                    text: 'Wind speed during two days'
                },
                subtitle: {
                    text: 'May 31 and and June 1, 2015 at two locations in Vik i Sogn, Norway'
                },
                //scrollbar: {
                //    barBackgroundColor: "#cccccc",
                //    barBorderColor: "#cccccc",
                //    barBorderRadius: 0,
                //    barBorderWidth: 1,
                //    buttonArrowColor: "#333333",
                //    buttonBackgroundColor: "#e6e6e6",
                //    buttonBorderColor: "#cccccc",
                //    buttonBorderRadius: 0,
                //    buttonBorderWidth: 1,
                //    enabled: true,
                //    height: 10,
                //    liveRedraw: 10,
                //    minWidth: 6,
                //    rifleColor: "#333333",
                //    showFull: true,
                //    trackBackgroundColor: "#f2f2f2",
                //    trackBorderColor: "#f2f2f2",
                //    trackBorderRadius: 0,
                //    trackBorderWidth: 1,
                //},
                xAxis: {
                    type: 'datetime',
                    labels: {
                        overflow: 'justify'
                    },
                    dateTimeLabelFormats:{
                        day: "%e %b, %y",
                        shortMonths: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                        months: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro']
                    },
                },
                yAxis: {
                    title: {
                        text: 'Wind speed (m/s)'
                    },
                    minorGridLineWidth: 0,
                    gridLineWidth: 0,
                    alternateGridColor: null,
                    plotBands: [{ // Light air
                        from: 0,
                        to: 0,
                        color: 'rgba(68, 170, 213, 0.1)',
                        label: {
                            //text: 'Vazio',
                            style: {
                                color: '#606060'
                            }
                        }
                    }, { // Light breeze
                        from: 1,
                        to: 10,
                        color: 'rgba(0, 0, 0, 0)',
                        label: {
                            //text: 'Normal',
                            style: {
                                color: '#606060'
                            }
                        }
                    }, { // Gentle breeze
                        from: 10,
                        to: 20,
                        color: 'rgba(68, 170, 213, 0.1)',
                        label: {
                            //text: 'Pouco cheio',
                            style: {
                                color: '#606060'
                            }
                        }
                    }, { // Moderate breeze
                        from: 20,
                        to: 30,
                        color: 'rgba(0, 0, 0, 0)',
                        label: {
                            //text: 'cheio',
                            style: {
                                color: '#606060'
                            }
                        }
                    }, { // Fresh breeze
                        from: 30,
                        to: 35,
                        color: 'rgba(68, 170, 213, 0.1)',
                        label: {
                            //text: 'muito cheio',
                            style: {
                                color: '#606060'
                            }
                        }
                    }, { // Strong breeze
                        from: 35,
                        to: 40,
                        color: 'rgba(0, 0, 0, 0)',
                        label: {
                            //text: 'Strong breeze',
                            style: {
                                color: '#606060'
                            }
                        }
                    }, { // High wind
                        from: 40,
                        to: 100,
                        color: 'rgba(68, 170, 213, 0.1)',
                        label: {
                            //text: 'High wind',
                            style: {
                                color: '#606060'
                            }
                        }
                    }]
                },
                tooltip: {
                    valueSuffix: ' passageiros'
                },
                plotOptions: {
                    spline: {
                        lineWidth: 4,
                        states: {
                            hover: {
                                lineWidth: 5
                            }
                        },
                        marker: {
                            enabled: false
                        },
                        pointInterval: 3600000, // one hour
                        pointStart: Date.UTC(2015, 4, 31, 0, 0, 0),
                    }
                },
                series: [{
                    name: 'Hestavollane',
                    data: [0, 0, 8, 8, 1, 3, 5, 9, 9, 6, 6, 3, 4, 6, 5, 2, 5, 5, 4, 1, 7, 4, 7, 3, 3, 1, 7, 1, 6, 1, 8, 6, 2, 9, 10, 11, 6, 11, 12, 12, 20, 30, 40, 50, 0, 0, 8, 8, 1, 3, 5, 9, 9, 6, 6, 3, 4, 6, 5, 2, 5, 5, 4, 1, 7, 4, 7, 3, 3, 1, 7, 1, 6, 1, 8, 6, 2, 9, 10, 11, 6, 11, 12, 12, 20, 30, 40, 50]

                }],
                navigation: {
                    menuItemStyle: {
                        fontSize: '10px'
<<<<<<< HEAD
>>>>>>> master
=======
>>>>>>> 59ac704b9c0be6156cd2358785c8813c4c01ec9c
>>>>>>> origin/vanessa
                    }
                }
            });
        });
<<<<<<< HEAD
    });
</script>*@
    

















@*<script type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/highcharts.js"></script>
<script src="~/Scripts/exporting.js"></script>


<script type="text/javascript">
    var chart2;
    $(function () {
        chart2 = new Highcharts.Chart({
            chart: {
                renderTo: 'container',
                type: 'line'
            },
            title: {
                text: 'Monthly Average Temperature'
            },
            subtitle: {
                text: 'Source: WorldClimate.com'
            },
            xAxis: {
                categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
            },
            yAxis: {
                title: {
                    text: 'Temperature (°C)'
                }
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: true
                    },
                    enableMouseTracking: false
                }
            },
            series: [{
                name: 'Tokyo',
                data: [7.0, 6.9, 9.5, 14.5, 18.4, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6]
            }, {
                name: 'London',
                data: [3.9, 4.2, 5.7, 8.5, 11.9, 15.2, 17.0, 16.6, 14.2, 10.3, 6.6, 4.8]
            }]
        });
    });
</script>*@
=======
    </script>*@
<<<<<<< HEAD
>>>>>>> master
=======
>>>>>>> 59ac704b9c0be6156cd2358785c8813c4c01ec9c
>>>>>>> origin/vanessa
