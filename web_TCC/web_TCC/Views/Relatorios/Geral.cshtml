@model IEnumerable<web_TCC.Models.V_RegistrosLinhasPontos>

@ViewBag.Error

@{
    ViewBag.Title = "Relatórios - Informações Gerais";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}


@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>

        <div class="control-group">

            <div class="controls">
                <div class="col-md-2 xdisplay_inputx form-group">
                    <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                    @Html.TextBox("txtGetDataInicio", "", new { @class = "form-control has-feedback-left", placeholder = "Data inicial" })
                </div>
                <div class="col-md-2 xdisplay_inputx form-group">
                    <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                    @Html.TextBox("txtGetDataFim", "", new { @class = "form-control has-feedback-left", placeholder = "Data final" })
                </div>
                @Html.DropDownList("ID_linha", null, "Linha", new { @class = "dropdown-toggle btn btn-default" })
            </div>
        </div>
        
</fieldset>
<br/>
<fieldset>
    <div class="control-group">
        <div class="controls">
            <div class="col-md-1 xdisplay_inputx form-group">
                <input type="submit" value="Filtrar" class="btn btn-primary" />
            </div>
            @*<button type="button" class="btn btn-default" data-toggle="modal" data-target=".bs-example-modal-lg">Gerar Gráfico</button>*@
            <button type="button" class="btn btn-default" data-toggle="modal" data-target=".bs-example-modal-lg">Gerar Gráfico dos resultados</button>
        </div>
    </div>
</fieldset>
}


@if (Model != null)
{
    if (Model.Any())
    {
        <div class="x_content">
            @*<p class="text-muted font-13 m-b-30">
                The Buttons extension for DataTables provides a common set of options, API methods and styling to display buttons on a page that will interact with a DataTable. The core library provides the based framework upon which plug-ins can built.
            </p>*@
            <table id="datatable-buttons" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Linha</th>
                        <th>Veículo</th>
                        <th>Tipo</th>
                        <th>Data</th>
                        <th>Hora</th>
                        <th>Passageiros</th>
                        <th>Ponto de ônibus</th>                            
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Registros.Linhas.Numero)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Registros.NumeroVeiculo)
                            </td>
                            <td>
                                @if (item.Registros.Entrada == true)
                                {
                                    @Html.Label("Entrada");
                                }
                                else
                                {
                                    @Html.Label("Saída");
                                }
                            </td>
                            <td>
                                @item.Registros.Data.ToShortDateString()
                                @*.ToString("dd/MM/yyyy")*@
                            </td>
                            @*<td style="background-color: #00ffe4">*@
                            <td>
                                @item.Registros.Data.ToShortTimeString()
                                @*@item.Relatorio.Hora.ToShortTimeString()
                                    .ToString("HH:mm:ss")*@
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Registros.QuantidadePessoas)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Pontos.Código) -
                                @Html.DisplayFor(modelItem => item.Pontos.Descricao)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    
    @*Gráfico irá aqui*@
    <!-- Modal -->
    <div class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        <span aria-hidden="true">×</span>
                    </button>
                    <h4 class="modal-title" id="myModalLabel">Modal title</h4>
                </div>
                <div class="modal-body">
                    <h4>Text in a modal</h4>
                    <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>
                    <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>
    <!-- /Modal -->
    }
}



<script src="highcharts.js"></script>
<script src="exporting.js"></script>

<div id="container" style="min-width: 300px; height: 400px; margin: 0 auto"></div>




<script type="text/javascript">
    $(function () {
        $('#container').highcharts({
            chart: {
                type: 'column'
            },
            title: {
                text: 'Grafico Geral'
            },
            subtitle: {
                text: 'Passageiros por dias'
            },
            xAxis: {
                type: 'category',
                labels: {
                    rotation: -45,
                    style: {
                        fontSize: '13px',
                        fontFamily: 'Verdana, sans-serif'
                    }
                }
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Passageiros (Dia)'
                }
            },
            legend: {
                enabled: true
            },
            tooltip: {
                pointFormat: 'Dia: <b>{point.y} Passageiros</b>'
            },
            series: [{
                name: 'Passageiros',
                data: [
                    [1, 800],
            [2, 900],
            [3, 600],
            [4, 1200],
            [5, 600],
            [6, 800],
            [7, 759],
            [8, 678],
            [9, 788],
            [10, 1150],
            [11, 823],
            [12, 954],
            [13, 400],
            [14, 399],
            [15, 755],
            [16, 800],
            [17, 821],
            [18, 921],
            [19, 788],
            [20, 1000],
            [21, 980],
            [22, 450],
            [23, 600],
            [24, 600],
            [25, 700],
            [26, 751],
            [27, 952],
            [28, 900],
            [29, 500],
            [30, 250]
                ],
                dataLabels: {
                    enabled: true,
                    rotation: -90,
                    color: '#FFFFFF',
                    align: 'right',
                    format: '{point.y}', // one decimal
                    y: 10, // 10 pixels down from the top
                    style: {
                        fontSize: '13px',
                        fontFamily: 'Verdana, sans-serif'
                    }
                }
            }]
        });
    });
</script>